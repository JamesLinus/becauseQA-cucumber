/*
* generated by Xtext
*/
package org.becausecucumber.eclipse.plugin.ui.labeling;

import org.becausecucumber.eclipse.plugin.cucumber.Background;
import org.becausecucumber.eclipse.plugin.cucumber.DocString;
import org.becausecucumber.eclipse.plugin.cucumber.Examples;
import org.becausecucumber.eclipse.plugin.cucumber.Feature;
import org.becausecucumber.eclipse.plugin.cucumber.Scenario;
import org.becausecucumber.eclipse.plugin.cucumber.ScenarioOutline;
import org.becausecucumber.eclipse.plugin.cucumber.Step;
import org.becausecucumber.eclipse.plugin.cucumber.Table;
import org.becausecucumber.eclipse.plugin.cucumber.Tag;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#labelProvider
 */
public class CucumberLabelProvider extends org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider {

	@Inject
	public CucumberLabelProvider(org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:

	// String text(Greeting ele) {
	// return "A greeting to " + ele.getName();
	// }
	//
	// String image(Greeting ele) {
	// return "Greeting.gif";
	// }

	String text(Feature ele) {
		return ele.getTitle();
	}

	String image(Feature ele) {
		return "cukes.gif";
	}

	String text(Background ele) {
		return ele.getTitle() == null ? "Background" : ele.getTitle();
	}

	String image(Background ele) {
		return "background.gif";
	}

	String text(Scenario ele) {
		return ele.getTitle() == null ? "Scenario" : ele.getTitle();
	}

	String image(Scenario ele) {
		return "scenario.gif";
	}

	String text(ScenarioOutline ele) {
		return ele.getTitle() == null ? "Scenario Outline" : ele.getTitle();
	}

	String image(ScenarioOutline ele) {
		return "cukes.gif";
	}

	String text(Step ele) {
		return ele.getDescription().trim();
	}

	String image(Step ele) {
		return "cukes.gif";
	}

	String text(Table ele) {
		return "Table of " + ele.getRows().size() + " rows";
	}

	String image(Table ele) {
		return "table.gif";
	}

	String text(DocString ele) {
		return "DocString:" + ele.getContent();
	}

	String image(DocString ele) {
		return "cukes.gif";
	}

	String text(Examples ele) {
		return ele.getTitle().isEmpty() ? "Examples" : ele.getTitle();
	}

	String image(Examples ele) {
		return "example.gif";
	}

	String text(Tag ele) {
		return ele.getId();
	}

	String image(Tag ele) {
		return "annotation.gif";
	}

}
